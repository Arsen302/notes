{"version":3,"sources":["context/alert/alertContext.js","context/firebase/firebaseContext.js","components/Form.jsx","components/Notes.jsx","components/Loader.jsx","pages/Home.jsx","pages/About.jsx","components/Navbar.jsx","components/Alert.jsx","context/alert/alertReducer.js","context/types.js","context/alert/AlertState.js","context/firebase/firebaseReduser.js","context/firebase/FirebaseState.js","App.jsx","index.js"],"names":["AlertContext","createContext","FirebaseContext","Form","useState","value","setValue","alert","useContext","firebase","onSubmit","event","preventDefault","trim","addNote","then","show","catch","className","type","placeholder","onChange","e","target","Notes","notes","onRemove","TransitionGroup","component","map","note","CSSTransition","key","id","classNames","timeout","title","date","onClick","Loader","role","Home","loading","fetchNotes","removeNote","useEffect","About","Navbar","to","exact","Alert","hide","in","visible","enter","exit","mountOnEnter","unmountOnExit","text","aria-label","aria-hidden","handlers","state","payload","alertReducer","action","DEFAULT","AlertState","children","useReducer","dispatch","Provider","filter","firebaseReduser","url","process","FirebaseState","showLoader","a","axios","get","res","Object","keys","data","Date","toJSON","post","name","Error","message","delete","App","path","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.b4b77e00.chunk.js","sourcesContent":["import {createContext} from 'react';\r\n\r\nexport const AlertContext = createContext()","import {createContext} from 'react'\r\n\r\nexport const FirebaseContext = createContext()","import React, { useState, useContext } from 'react';\r\nimport { AlertContext } from '../context/alert/alertContext';\r\nimport { FirebaseContext } from '../context/firebase/firebaseContext';\r\n\r\nexport const Form = () => {\r\n    const [value, setValue] = useState('')\r\n    const alert = useContext(AlertContext)\r\n    const firebase = useContext(FirebaseContext)\r\n\r\n    const submitHandler = event => {\r\n        event.preventDefault()\r\n\r\n        if (value.trim()) {\r\n            firebase.addNote(value.trim()).then(() => {\r\n                alert.show('Заметка была создана!', 'success')\r\n            })\r\n            .catch(() => {\r\n                alert.show('Что-то пошло не так!', 'fail')\r\n            })\r\n            setValue('')\r\n            }\r\n            else {\r\n                alert.show('Введите текст')\r\n            }\r\n        }\r\n\r\n    return (\r\n        <form onSubmit={submitHandler}>\r\n            <div className=\"form-group\">\r\n                <input type=\"text\" className=\"form-control\" \r\n                placeholder=\"Добавить новую заметку!\" value={value} \r\n                onChange={e => setValue(e.target.value)}/>\r\n            </div>\r\n        </form>\r\n    )\r\n};\r\n\r\nexport default Form;","import React from 'react'\r\nimport {CSSTransition, TransitionGroup} from 'react-transition-group'\r\n\r\nexport const Notes = ({notes, onRemove}) => (\r\n    <TransitionGroup component=\"ul\" className=\"list-group\">\r\n        {notes.map(note => (\r\n            <CSSTransition key={note.id} classNames={'note'} timeout={700}>\r\n                <li className=\"list-group-item note\">\r\n                    <strong>{note.title}</strong>\r\n                    <small>{note.date}</small>\r\n                    <button type=\"button\" className=\"btn btn-outline-danger btn-sm\" onClick={() => onRemove(note.id)}>\r\n                        &times;\r\n                    </button>\r\n                </li>\r\n            </CSSTransition>\r\n        ))}\r\n    </TransitionGroup>\r\n)","import React from 'react'\r\n\r\nexport const Loader = () => (\r\n    <div className=\"text-center\">\r\n        <div className=\"spinner-border\" role=\"status\">\r\n            <span className=\"sr-only\">Loading...</span>\r\n        </div>\r\n    </div>\r\n)","import React, {Fragment, useContext, useEffect} from 'react';\r\nimport Form from '../components/Form';\r\nimport { Notes } from '../components/Notes';\r\nimport { FirebaseContext } from '../context/firebase/firebaseContext';\r\nimport { Loader } from '../components/Loader';\r\n\r\nexport const Home = () => {\r\n    const {loading, notes, fetchNotes, removeNote} = useContext(FirebaseContext)\r\n    useEffect(() => {\r\n        fetchNotes()\r\n        //eslint-disable-next-line\r\n    },[])\r\n\r\n    return (\r\n        <Fragment>\r\n            <Form />      \r\n            <hr/>\r\n            {loading \r\n                ? <Loader /> \r\n                : <Notes notes={notes} onRemove={removeNote} />}\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nexport default Home;","import React from 'react';\r\n\r\nexport const About = () => (\r\n    <div className=\"jumbotron\">\r\n        <h1 className=\"display-4\">Hello, world!</h1>\r\n        <h2>This is my first React App</h2>\r\n    </div>\r\n)\r\n\r\nexport default About;","import React from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\n\r\nexport const Navbar = () => (\r\n  // Добавить новых классов из бутстрапа\r\n  <nav className=\"navbar navbar-dark navbar-expand-lg bg-primary\">\r\n    <NavLink className=\"navbar-brand text-light\" to=\"/notes/\">\r\n      Note App\r\n    </NavLink>\r\n    <div className=\"collapse navbar-collapse\" id=\"navbarNav\">\r\n      <ul className=\"navbar-nav \">\r\n        <li className=\"nav-item\">\r\n          <NavLink className=\"nav-link text-light\" to=\"/notes/\" exact>\r\n            Главная\r\n          </NavLink>\r\n        </li>\r\n        <li className=\"nav-item\">\r\n          <NavLink className=\"nav-link text-light\" to=\"/about\">\r\n            Информация\r\n          </NavLink>\r\n        </li>\r\n      </ul>\r\n    </div>\r\n  </nav>\r\n);\r\n\r\nexport default Navbar;\r\n","import React, { useContext } from 'react'\r\nimport {CSSTransition} from 'react-transition-group'\r\nimport { AlertContext } from '../context/alert/alertContext'\r\n\r\nexport const Alert = () => {\r\n    const {alert, hide} = useContext(AlertContext)\r\n\r\n    return (\r\n        <CSSTransition in={alert.visible} timeout={{enter:500, exit: 300}} classNames={'alert'} mountOnEnter unmountOnExit>\r\n            <div className={`alert alert-${alert.type || 'warning'} alert-dismissible`}>\r\n                <strong>Внимание</strong>\r\n                &nbsp;{alert.text}\r\n                <button onClick={hide} type=\"button\" className=\"close\" aria-label=\"Close\">\r\n                    <span aria-hidden=\"true\">&times;</span>\r\n                </button>\r\n            </div>\r\n        </CSSTransition>\r\n    )\r\n}","import { SHOW_ALERT, HIDE_ALERT } from \"../types\";\r\n\r\nconst handlers = {\r\n  [SHOW_ALERT]: (state, { payload }) => ({ ...payload, visible: true }),\r\n  [HIDE_ALERT]: (state) => ({ ...state, visible: false }),\r\n  DEFAULT: (state) => state,\r\n};\r\n\r\nexport const alertReducer = (state, action) => {\r\n  const handle = handlers[action.type] || handlers.DEFAULT;\r\n  return handle(state, action);\r\n};\r\n","export const SHOW_ALERT = 'SHOW_ALERT'\r\nexport const HIDE_ALERT = 'HIDE_ALERT'\r\nexport const SHOW_LOADER = 'SHOW_LOADER'\r\nexport const ADD_NOTE = 'ADD_NOTE'\r\nexport const FETCH_NOTES = 'FETCH_NOTES'\r\nexport const REMOVE_NOTE = 'REMOVE_NOTE'","import React, {useReducer} from 'react';\r\nimport { AlertContext } from './alertContext';\r\nimport { alertReducer } from './alertReducer';\r\nimport { SHOW_ALERT, HIDE_ALERT } from '../types';\r\n\r\nexport const AlertState = ({children}) => {\r\n    const [state, dispatch] = useReducer(alertReducer, {visible: false})\r\n\r\n    const show = (text, type = 'warning') => {\r\n        dispatch({\r\n            type: SHOW_ALERT,\r\n            payload: {text, type}\r\n        })\r\n    }\r\n\r\n    const hide = () => dispatch({type: HIDE_ALERT})\r\n\r\n    return (\r\n        <AlertContext.Provider value={{\r\n            show, hide, alert: state}}>\r\n            {children}\r\n        </AlertContext.Provider>\r\n    )\r\n}","import {SHOW_LOADER, ADD_NOTE, FETCH_NOTES, REMOVE_NOTE} from '../types'\r\n\r\nconst handlers = {\r\n    [SHOW_LOADER]: state => ({...state, loading: true}),\r\n    [ADD_NOTE]: (state, {payload}) => ({...state, \r\n        notes: [...state.notes, payload]}),\r\n    [FETCH_NOTES]: (state, {payload}) => ({...state, notes: payload, loading: false}),\r\n    [REMOVE_NOTE]: (state, {payload}) => ({...state, \r\n        notes: state.notes.filter(note => note.id !== payload)}),\r\n    DEFAULT: state => state\r\n}\r\n\r\nexport const firebaseReduser = (state, action) => {\r\n    const handle = handlers[action.type] || handlers.DEFAULT\r\n    return handle(state, action)\r\n}","import React, {useReducer} from 'react';\r\nimport { FirebaseContext } from './firebaseContext';\r\nimport { firebaseReduser } from './firebaseReduser';\r\nimport axios from 'axios';\r\nimport { SHOW_LOADER, REMOVE_NOTE, ADD_NOTE, FETCH_NOTES } from '../types';\r\n\r\nconst url = process.env.REACT_APP_DB_URL\r\n\r\nexport const FirebaseState = ({children}) => {\r\n    const initialState = {notes: [], loading: false}\r\n    \r\n    const [state, dispatch] = useReducer(firebaseReduser, initialState)\r\n    \r\n    const showLoader = () => dispatch({type: SHOW_LOADER})\r\n    \r\n    const fetchNotes = async () => {\r\n        showLoader()\r\n        const res = await axios.get(`${url}/notes.json`)\r\n        const payload = Object.keys(res.data).map(key => {\r\n            return {...res.data[key], id: key}\r\n        })\r\n\r\n        dispatch({type: FETCH_NOTES, payload})\r\n    }\r\n    const addNote = async title => {\r\n        const note = {\r\n            title, date: new Date().toJSON()\r\n        }\r\n    \r\n        try {\r\n            const res = await axios.post(`${url}/notes.json`, note)\r\n            const payload = {...note, id: res.data.name}\r\n        \r\n            dispatch({type: ADD_NOTE, payload})\r\n        }\r\n        \r\n        catch (e) {\r\n            throw new Error(e.message)\r\n        }\r\n    }\r\n    const removeNote = async id => {\r\n        await axios.delete(`${url}/notes/${id}.json`)\r\n        dispatch({type: REMOVE_NOTE, payload: id})\r\n    }\r\n\r\n    return (\r\n        <FirebaseContext.Provider value={{\r\n            showLoader, addNote, removeNote, fetchNotes,\r\n            loading: state.loading, notes: state.notes}}>\r\n            {children}\r\n        </FirebaseContext.Provider>\r\n    )\r\n}","import React from \"react\";\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\nimport Home from \"./pages/Home\";\nimport About from \"./pages/About\";\nimport Navbar from \"./components/Navbar\";\nimport { Alert } from \"./components/Alert\";\nimport { AlertState } from \"./context/alert/AlertState\";\nimport { FirebaseState } from \"./context/firebase/FirebaseState\";\n\nfunction App() {\n  return (\n    <FirebaseState>\n      <AlertState>\n        <Router>\n          <Navbar />\n          <div className=\"container pt-4\">\n            <Alert />\n            <Switch>\n              <Route path=\"/notes/\" exact component={Home} />\n              <Route path=\"/about\" component={About} />\n            </Switch>\n          </div>\n        </Router>\n      </AlertState>\n    </FirebaseState>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.scss\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}